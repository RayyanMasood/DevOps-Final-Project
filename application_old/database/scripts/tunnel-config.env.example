# SSH Tunnel Configuration for DevOps Database Access
# Copy this file to tunnel-config.env and update with your actual values

# =============================================================================
# BASTION HOST CONFIGURATION
# =============================================================================

# Public IP or DNS name of your bastion host
BASTION_HOST="your-bastion-public-ip-or-dns"

# SSH user for bastion host (typically ec2-user for Amazon Linux)
BASTION_USER="ec2-user"

# Path to SSH private key for bastion host access
BASTION_KEY="${HOME}/.ssh/devops-key.pem"

# =============================================================================
# MYSQL RDS CONFIGURATION
# =============================================================================

# RDS MySQL endpoint (private subnet)
RDS_MYSQL_HOST="your-mysql-rds-endpoint.region.rds.amazonaws.com"

# RDS MySQL port (typically 3306)
RDS_MYSQL_PORT="3306"

# Local port for MySQL tunnel (must be different from PostgreSQL)
LOCAL_MYSQL_PORT="3307"

# MySQL database credentials
MYSQL_USER="app_user"
MYSQL_PASSWORD="your_secure_mysql_password"
MYSQL_DATABASE="devops_app"

# =============================================================================
# POSTGRESQL RDS CONFIGURATION
# =============================================================================

# RDS PostgreSQL endpoint (private subnet)
RDS_POSTGRESQL_HOST="your-postgresql-rds-endpoint.region.rds.amazonaws.com"

# RDS PostgreSQL port (typically 5432)
RDS_POSTGRESQL_PORT="5432"

# Local port for PostgreSQL tunnel (must be different from MySQL)
LOCAL_POSTGRESQL_PORT="5433"

# PostgreSQL database credentials
POSTGRESQL_USER="analytics_user"
POSTGRESQL_PASSWORD="your_secure_postgresql_password"
POSTGRESQL_DATABASE="devops_analytics"

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Enable SSL connections (true/false)
USE_SSL="true"

# SSH connection timeout (seconds)
SSH_TIMEOUT="30"

# SSH keep-alive interval (seconds)
SSH_KEEPALIVE="60"

# Maximum SSH connection retries
SSH_MAX_RETRIES="3"

# =============================================================================
# MONITORING SETTINGS
# =============================================================================

# Alert threshold for high connection usage (percentage)
ALERT_THRESHOLD_CONNECTIONS="80"

# Alert threshold for slow queries
ALERT_THRESHOLD_SLOW_QUERIES="10"

# Log retention days
LOG_RETENTION_DAYS="30"

# =============================================================================
# BACKUP SETTINGS
# =============================================================================

# Backup retention periods (days)
MYSQL_RETENTION_DAYS="30"
POSTGRESQL_RETENTION_DAYS="30"
COMPRESSED_RETENTION_DAYS="90"

# Backup directory (relative to scripts directory)
BACKUP_DIR="../backups"

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================

# Environment name (dev, staging, prod)
ENVIRONMENT="dev"

# Project name for tagging and identification
PROJECT_NAME="devops-dashboard"

# =============================================================================
# NOTIFICATION SETTINGS (Optional)
# =============================================================================

# Webhook URL for alerts (Slack, Teams, etc.)
# WEBHOOK_URL="https://hooks.slack.com/services/YOUR/WEBHOOK/URL"

# Email for notifications
# ALERT_EMAIL="admin@yourcompany.com"

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================

# Custom SSH options (space-separated)
SSH_OPTIONS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR"

# Connection pool settings for applications
MAX_CONNECTION_POOL_SIZE="20"
MIN_CONNECTION_POOL_SIZE="5"

# Query timeout (seconds)
QUERY_TIMEOUT="300"

# =============================================================================
# TERRAFORM INTEGRATION (Optional)
# =============================================================================

# Terraform state bucket (if using remote state)
# TERRAFORM_STATE_BUCKET="your-terraform-state-bucket"

# Terraform workspace
# TERRAFORM_WORKSPACE="default"

# AWS region
# AWS_REGION="us-west-2"

# =============================================================================
# USAGE EXAMPLES
# =============================================================================

# Example values for reference:
# BASTION_HOST="52.12.34.56"
# RDS_MYSQL_HOST="devops-mysql.xyz123.us-west-2.rds.amazonaws.com"
# RDS_POSTGRESQL_HOST="devops-postgres.xyz123.us-west-2.rds.amazonaws.com"
# BASTION_KEY="/home/user/.ssh/devops-keypair.pem"

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Keep this file secure and never commit it to version control
# 2. Use strong passwords for database users
# 3. Rotate SSH keys and passwords regularly
# 4. Limit SSH access to specific IP ranges via security groups
# 5. Enable VPC Flow Logs for network monitoring
# 6. Use AWS Systems Manager Session Manager as an alternative to SSH

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common issues and solutions:
#
# 1. SSH key permissions error:
#    chmod 600 ~/.ssh/your-key.pem
#
# 2. Connection refused:
#    - Check security group rules allow SSH (port 22) from your IP
#    - Verify bastion host is running
#    - Confirm RDS endpoints are correct
#
# 3. Port already in use:
#    - Check if tunnels are already running: lsof -i :3307 -i :5433
#    - Stop existing tunnels before starting new ones
#
# 4. Database connection failed:
#    - Verify RDS security groups allow access from bastion host
#    - Check database credentials and permissions
#    - Ensure RDS instances are in running state
